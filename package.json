{
  "name": "fiction-writer-2",
  "displayName": "Fiction Writer 2",
  "description": "The next version of the Fiction Writer extension",
  "version": "0.0.1",
  "type": "commonjs",
  "publisher": "vsc-zoctarine",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "capabilities": {
	"virtualWorkspaces": {
	  "supported": false,
	  "description": "Virtual workspaces are not supported"
	}
  },
  "contributes": {
    "colors": [
      {
        "id": "fictionWriter.blue",
        "description": "Blue Color",
        "defaults": {
          "dark": "#2196F3",
          "light": "#1565C0",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.lightblue",
        "description": "Blue Color",
        "defaults": {
          "dark": "#4cc9f0",
          "light": "#4cc9f0",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.teal",
        "description": "Teal Color",
        "defaults": {
          "dark": "#2ec4b6",
          "light": "#2ec4b6",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.red",
        "description": "Red Color",
        "defaults": {
          "dark": "#ef5350",
          "light": "#e53935",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.lightred",
        "description": "Light Red Color",
        "defaults": {
          "dark": "#e06c75",
          "light": "#e06c75",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.lime",
        "description": "Lime Color",
        "defaults": {
          "dark": "#8BC34A",
          "light": "#8BC34A",
          "highContrast": "#00FF00"
        }
      },
      {
        "id": "fictionWriter.green",
        "description": "Green Color",
        "defaults": {
          "dark": "#00E676",
          "light": "#2E7D32",
          "highContrast": "#00FF00"
        }
      },
      {
        "id": "fictionWriter.orange",
        "description": "Orange Color",
        "defaults": {
          "dark": "#FF9800",
          "light": "#EF6C00",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.amber",
        "description": "Amber Color",
        "defaults": {
          "dark": "#FFC107",
          "light": "#FFA000",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.lightamber",
        "description": "Amber Color",
        "defaults": {
          "dark": "#F6D55C",
          "light": "#F6D55C",
          "highContrast": "#ffffff"
        }
      },
      {
        "id": "fictionWriter.purple",
        "description": "Purple Color",
        "defaults": {
          "dark": "#9C27B0",
          "light": "#9C27B0",
          "highContrast": "#ddb6b6"
        }
      },
      {
        "id": "fictionWriter.bluegrey",
        "description": "Blue Grey Color",
        "defaults": {
          "dark": "#607D8B",
          "light": "#607D8B",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.grey",
        "description": "Grey Color",
        "defaults": {
          "dark": "#7e7e7e",
          "light": "#8e8e8e",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.yellow",
        "description": "Yellow Color",
        "defaults": {
          "dark": "#FFEB3B",
          "light": "#FBC02D",
          "highContrast": "#FFFFFF"
        }
      },
      {
        "id": "fictionWriter.pink",
        "description": "Pink Color",
        "defaults": {
          "dark": "#F06292",
          "light": "#F06292",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.white",
        "description": "White Color",
        "defaults": {
          "dark": "#cccccc",
          "light": "#FFFFFF",
          "highContrast": "#FFFFFF"
        }
      },
      {
        "id": "fictionWriter.black",
        "description": "Black Color",
        "defaults": {
          "dark": "#111111",
          "light": "#333333",
          "highContrast": "#000000"
        }
      }
    ],
    "configuration": [
      {
        "title": "Editors",
        "properties": {
          "fictionWriter.editors.richTextEditor.enabled": {
            "scope": "application",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enables an experimental rich text editor (based on [ProseMirror](https://prosemirror.net/)).",
            "order": 1
          },
          "fictionWriter.editors.richTextEditor.focusMode": {
            "scope": "application",
            "type": "string",
            "enum": [
              "none",
              "paragraph",
              "sentence"
            ],
            "default": "none",
            "markdownDescription": "Emphasize the active sentence or paragraph. Select `none` to disable.",
            "order": 2
          },
          "fictionWriter.editors.richTextEditor.showMergeEditorOnClose": {
            "scope": "application",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show merge editor when closing the rich text editor.\n> **Note**: this is recommended, as the text editor will parse and serialze the original file markdown content.",
            "order": 3
          },
          "fictionWriter.editors.enableAltMarkdownEditor": {
            "scope": "application",
            "type": "boolean",
            "default": true,
            "description": "Enables an alternative markdown editor (based on CodeMirror).",
            "order": 4
          },
          "fictionWriter.editors.autoSyncIntervalInSeconds": {
            "scope": "application",
            "type": "number",
            "default": 10,
            "minimum": 5,
            "maximum": 1440,
            "description": "External editors need to sync modified contents with VS Code. For large documents, syncing at every keystroke is not efficient..",
            "order": 5
          }
        }
      },
      {
        "title": "Projects",
        "properties": {
          "fictionWriter.projects.enabled": {
            "scope": "application",
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Projects"
          },
          "fictionWriter.projects.fileTypes": {
            "scope": "application",
            "order": 20,
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "default": [
              "md"
            ],
            "tags": [
              "usesOnlineServices"
            ],
            "markdownDescription": "What file extensions should be considered as project files. (eg. `md` for `.md` files.)"
          },
          "fictionWriter.projects.fileAndFolderTrackingTag": {
            "scope": "application",
            "order": 18,
            "type": "string",
            "default": "fw",
            "markdownDescription": "Only manage files and folders ending with this tag in project view.\n\n**Example:** if project tag is `fw` you will need to name your files like `Chapter1.fw/Scene1.fw.md` to be visible in the project view."
          },
          "fictionWriter.projects.rootFoldersEnabled": {
            "scope": "application",
            "order": 25,
            "type": "boolean",
            "default": true,
            "description": "Enable Root Folders inside Projects"
          },
          "fictionWriter.projects.fileDescriptionMetadataKey": {
            "scope": "application",
            "type": "string",
            "default": "title",
            "markdownDescription": "Shows the value of this metadata key, as a description, after the fileName, in the project tree. Leave blank if you don't want to show anything.",
            "order": 38
          }
        }
      },
      {
        "title": "Text Analysis",
        "properties": {
          "fictionWriter.textAnalysis.enabled": {
            "scope": "application",
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Text Analysis"
          },
          "fictionWriter.textAnalysis.autoRefreshWhenPossible": {
            "scope": "application",
            "order": 2,
            "type": "boolean",
            "default": true,
            "description": "Refreshes the text analysis when active editor changes, or analysis panel visibility changes."
          }
        }
      },
      {
        "title": "Metadata",
        "properties": {
          "fictionWriter.metadata.view.enabled": {
            "scope": "application",
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable File Metadata View"
          },
          "fictionWriter.metadata.default": {
            "scope": "application",
            "order": 2,
            "type": "object",
            "default": {
              "status": "draft",
              "tags": "[]"
            },
            "markdownDescription": "Default metadata keys to be added when new meta block is created",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fictionWriter.metadata.view.icons": {
            "scope": "application",
            "order": 3,
            "type": "object",
            "markdownDescription": "Icons for metadata. Select any value from [Code Icons](https://code.visualstudio.com/api/references/icons-in-labels#icon-listing). The icon will be set if any partial or full match of the `Item` is found in the metadata key or value.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fictionWriter.metadata.view.colors": {
            "scope": "application",
            "order": 4,
            "type": "object",
            "markdownDescription": "The color will be set if the text from `Item` is found in the metadata key or value. You can customize these colors in [workbench customizations](https://code.visualstudio.com/api/extension-guides/color-theme#workbench-colors). Find [here](#) the full lsit of color ids.",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "blue",
                "lightblue",
                "teal",
                "red",
                "lightred",
                "lime",
                "green",
                "orange",
                "amber",
                "lightamber",
                "purple",
                "bluegrey",
                "grey",
                "yellow",
                "pink",
                "white",
                "black"
              ]
            }
          },
          "fictionWriter.metadata.filters.countBadges.enabled": {
            "scope": "application",
            "order": 6,
            "type": "boolean",
            "default": true,
            "description": "Show counters in Filter View"
          }
        }
      },
      {
        "title": "Security",
        "properties": {
          "fictionWriter.security.encrypt.globalPassword": {
            "scope": "application",
            "type": "string",
            "default": "FiCtIoNwRiTeR#2",
            "markdownDescription": "Set a global password for all encrypted files.\n\n**`⚠️ Warning!`** *Changing this password will make decrypting **ALL** previously encrypted files unreadable!*",
            "order": 1
          },
          "fictionWriter.security.encrypt.temporaryFies.enabled": {
            "scope": "application",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Encrypts all temporary files created in extension storage folder with the `#fictionWriter.security.encrypt.globalPassword#`",
            "order": 2
          }
        }
      }
    ],
    "configurationDefaults": {
      "[fwmarkdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false,
        "editor.indentSize": "tabSize",
        "editor.wrappingIndent": "none",
        "editor.guides.indentation": false
      }
    },
    "icons": {
      "mdi-clock-loader-10": {
        "description": "clock_loader_10",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f726"
        }
      },
      "mdi-clock-loader-20": {
        "description": "clock_loader_20",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f725"
        }
      },
      "mdi-clock-loader-40": {
        "description": "clock_loader_40",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f724"
        }
      },
      "mdi-clock-loader-60": {
        "description": "clock_loader_60",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f723"
        }
      },
      "mdi-clock-loader-80": {
        "description": "clock_loader_80",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f722"
        }
      },
      "mdi-clock-loader-90": {
        "description": "clock_loader_90",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f721"
        }
      },
      "mdi-description": {
        "description": "description",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e873"
        }
      },
      "mdi-description-fill": {
        "description": "description_fill",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset-fill.woff2",
          "fontCharacter": "\\e873"
        }
      },
      "mdi-draft": {
        "description": "draft",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e66d"
        }
      },
      "mdi-folder": {
        "description": "folder",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e2c7"
        }
      },
      "mdi-folder-open": {
        "description": "folder_open",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e2c8"
        }
      },
      "mdi-format-line-spacingd": {
        "description": "format_line_spacing",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e240"
        }
      },
      "mdi-hourglass-disabled": {
        "description": "hourglass_disabled",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\ef53"
        }
      },
      "mdi-hourglass-empty": {
        "description": "hourglass_empty",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e88b"
        }
      },
      "mdi-link": {
        "description": "link",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e250"
        }
      },
      "mdi-link-off": {
        "description": "link_off",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e16f"
        }
      },
      "mdi-splitscreen-bottom": {
        "description": "splitscreen_bottom",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f676"
        }
      },
      "mdi-splitscreen-top": {
        "description": "splitscreen_top",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\f673"
        }
      },
      "mdi-swap-vert": {
        "description": "swap_vert",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e8d5"
        }
      },
      "mdi-task-alt": {
        "description": "task_alt",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e2e6"
        }
      },
      "mdi-vertical-align-bottom": {
        "description": "vertical_align_bottom",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e258"
        }
      },
      "mdi-vertical-align-top": {
        "description": "vertical_align_top",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e25a"
        }
      },
      "mdi-vertical-distribute": {
        "description": "vertical_distribute",
        "default": {
          "fontPath": "./media/webfonts/MaterialSymbolsRounded-subset.woff2",
          "fontCharacter": "\\e076"
        }
      },
      "fa-trash-can": {
        "description": "trash-can",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f2ed"
        }
      },
      "fa-book": {
        "description": "book",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f02d"
        }
      },
      "fa-inbox": {
        "description": "inbox",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f01c"
        }
      },
      "fa-filter": {
        "description": "filter",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f0b0"
        }
      },
      "fa-link": {
        "description": "link",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f08e"
        }
      },
      "fa-magnifying-glass": {
        "description": "magnifying-glass",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f002"
        }
      },
      "fa-file-lines-solid": {
        "description": "file-lines-solid",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-file-excel": {
        "description": "file-circle-question",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f1c3"
        }
      },
      "fa-file-lines": {
        "description": "file-lines",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-reply": {
        "description": "reply",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f104"
        }
      },
      "fa-copy": {
        "description": "copy",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f0c5"
        }
      },
      "fa-folder": {
        "description": "folder",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f07b"
        }
      },
      "fa-folder-closed": {
        "description": "folder-closed",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\e185"
        }
      },
      "fa-pen": {
        "description": "pen",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f304"
        }
      },
      "fa-pen-nib": {
        "description": "pen nib",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f5ad"
        }
      },
      "fa-folder-tree": {
        "description": "folder-tree",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f802"
        }
      },
      "fa-chart-column": {
        "description": "chart-column",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\e0e3"
        }
      },
      "fa-file-arrow-down": {
        "description": "file-arrow-down",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f56d"
        }
      }
    },
    "submenus": [
      {
        "id": "fictionWriter.explorer.view",
        "label": "View"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "fictionWriter.explorer.revealInProjectsView",
          "when": "fictionWriter.projects.enabled == true",
          "group": "1_fictionWriter_project@1"
        }
      ],
      "editor/context": [
        {
          "command": "fictionWriter.files.split",
          "group": "FictionWriter@1",
          "when": "editorLangId == fwmarkdown"
        },
        {
          "command": "fictionWriter.files.extract",
          "group": "FictionWriter@2",
          "when": "editorLangId == fwmarkdown && editorHasSelection"
        },
        {
          "command": "fictionWriter.files.extractMultiple",
          "group": "FictionWriter@3",
          "when": "editorLangId == fwmarkdown && editorHasSelection"
        }
      ],
      "fictionWriter.editor": [],
      "commandPalette": [
        {
          "command": "fictionWriter.views.projectExplorer.toggleVirtualFolder",
          "when": "false"
        },
        {
          "command": "fictionWriter.views.projectExplorer.sync.on",
          "when": "false"
        },
        {
          "command": "fictionWriter.views.projectExplorer.sync.off",
          "when": "false"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.startHere",
          "when": "false"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == fwmarkdown && !activeCustomEditorId && fictionWriter.editors.richTextEditor.enabled == true",
          "command": "fictionWriter.editors.proseMirror.openInProseMirror",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == fwmarkdown && activeCustomEditorId && fictionWriter.editors.richTextEditor.enabled == true",
          "command": "fictionWriter.editors.proseMirror.openInTextEditor",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "fictionWriter.views.projectExplorer.view.tree",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.projectView != tree",
          "group": "1_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.view.list",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.projectView != list",
          "group": "1_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.order.on",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.showOrder == off",
          "group": "2_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.order.off",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.showOrder == on",
          "group": "2_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.extension.on",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.showExtension == off",
          "group": "2_fictionWriter@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.extension.off",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.showExtension == on",
          "group": "2_fictionWriter@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.sync.on",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.sync == off",
          "group": "3_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.sync.off",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.sync == on",
          "group": "3_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.navigation.back",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.back",
          "group": "navigation@10"
        },
        {
          "command": "fictionWriter.views.projectExplorer.filters.allFiles",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.filter == projectFiles",
          "group": "navigation@20"
        },
        {
          "command": "fictionWriter.views.projectExplorer.filters.projectFiles",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.filter == allFiles",
          "group": "navigation@20"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.decoration1",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.decoration == decoration1",
          "group": "navigation@30"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.decoration2",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.decoration == decoration2",
          "group": "navigation@30"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.decoration3",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.decoration == decoration3",
          "group": "navigation@30"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.decoration4",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.decoration == decoration4",
          "group": "navigation@30"
        },
        {
          "command": "fictionWriter.views.projectExplorer.show.decoration5",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.decoration == decoration5",
          "group": "navigation@30"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.newFile",
          "group": "navigation@40"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.newFolder",
          "group": "navigation@50"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.start",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.orderStart",
          "group": "navigation@60"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.discard",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.orderDiscard",
          "group": "navigation@70"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.commit",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.orderCommit",
          "group": "navigation@80"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.discard",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.compileDiscard",
          "group": "navigation@90"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.commit",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.ctx.compileCommit",
          "group": "navigation@100"
        },
        {
          "command": "fictionWriter.views.wordFrequency.refresh",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.clear",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.open",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.statistics.refresh",
          "when": "view == fictionWriter.views.statistics",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.setFilter",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.hasFilter == false",
          "group": "navigation@20"
        },
        {
          "command": "fictionWriter.views.metadata.filters.removeFilter",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.hasFilter == true",
          "group": "navigation@20"
        },
        {
          "command": "fictionWriter.views.metadata.filters.linkWithFileView.off",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.isLinked == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.linkWithFileView.on",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.isLinked == false",
          "group": "navigation"
        }
      ],
      "fictionWriter.explorer.view": [
        {
          "command": "fictionWriter.views.projectExplorer.view.treeHere",
          "when": "view == fictionWriter.views.projectExplorer ",
          "group": "01_fictionWriter_show@3"
        },
        {
          "command": "fictionWriter.views.projectExplorer.view.listHere",
          "when": "view == fictionWriter.views.projectExplorer ",
          "group": "01_fictionWriter_show@3"
        }
      ],
      "view/item/context": [
        {
          "submenu": "fictionWriter.explorer.view",
          "group": "99_fictionWriter_view@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.open",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bopen\\b/ && !listMultiSelection",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.projectExplorer.debug.stateDump",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bdebug\\b/ && !listMultiSelection",
          "group": "99_fictionWriter_debug@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.addToProject",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\binclude\\b/",
          "group": "1_fictionWriter_project@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.addToProject",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\binclude\\b/",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.projectExplorer.excludeFromProject",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bexclude\\b/",
          "group": "9_fictionWriter_last@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.revealInExplorer",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\breveal\\b/ && !listMultiSelection",
          "group": "1_fictionWriter_project@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.toggleVirtualFolder",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\btoggleVirtual\\b/ && !listMultiSelection",
          "group": "3_fictionWriter_virtual@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer  && viewItem =~ /\\bnewFile\\b/ && !listMultiSelection",
          "group": "4_fictionWriter@3"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer  && viewItem =~ /\\bnewFolder\\b/ && !listMultiSelection",
          "group": "4_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.rename",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\brename\\b/ && !listMultiSelection",
          "group": "4_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.trash",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bdelete\\b/",
          "group": "4_fictionWriter@5"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.start",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\breorder\\b/ && !listMultiSelection",
          "group": "5_fw_reorder@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.commit",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\breorderCommit\\b/",
          "group": "5_fw_reorder@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.redistribute",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bredistribute\\b/ && !listMultiSelection",
          "group": "5_fw_reorder_sorting@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder.discard",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\breorderDiscard\\b/",
          "group": "99_fw_reorder_cancel@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.startHere",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcompile\\b/",
          "group": "6_fw_compile@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.commit",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcompileCommit\\b/",
          "group": "6_fw_compile@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.childrenInclude",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcompileChildrenInclude\\b/",
          "group": "6_fw_compile_selection@3"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.childrenExclude",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcompileChildrenExclude\\b/",
          "group": "6_fw_compile_selection@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.compile.discard",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcompileDiscard\\b/",
          "group": "99_fw_compile_cancel@9"
        },
        {
          "command": "fictionWriter.files.combine",
          "when": "view == fictionWriter.views.projectExplorer && viewItem =~ /\\bcombine\\b/ && listMultiSelection",
          "group": "6_fictionWriter@2"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.down",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.up",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.metadata.editValue",
          "when": "view == fictionWriter.views.metadata && (viewItem == metaValue || viewItem == metaInlineValue)",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.metadata.filters.showFilter",
          "when": "view == fictionWriter.views.metadata.filters && viewItem == filterItemMetadataKeyHidden",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.metadata.filters.hideFilter",
          "when": "view == fictionWriter.views.metadata.filters && viewItem == filterItemMetadataKey",
          "group": "1_fictionWriter@1"
        },
        {
          "command": "fictionWriter.views.metadata.filters.setFileDescriptionMetadataKey",
          "when": "view == fictionWriter.views.metadata.filters && viewItem == filterItemMetadataKey",
          "group": "2_fictionWriterMeta@1"
        },
        {
          "command": "fictionWriter.views.metadata.setFileDescriptionMetadataKey",
          "when": "view == fictionWriter.views.metadata && (viewItem == metaKey || viewItem == metaInlineValue)",
          "group": "2_fictionWriterMeta@1"
        }
      ]
    },
    "commands": [
      {
        "command": "fictionWriter.files.split",
        "title": "Split here",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.files.combine",
        "title": "Combine files",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.files.extract",
        "title": "Extract...",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.files.extractMultiple",
        "title": "Extract to multiple files...",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.explorer.revealInProjectsView",
        "title": "Reveal in FictionWriter",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.open",
        "title": "Edit",
        "icon": "$(pencil)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.editors.proseMirror.openInProseMirror",
        "title": "Switch to RichText editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen-nib)"
      },
      {
        "command": "fictionWriter.editors.proseMirror.openInTextEditor",
        "title": "Switch to default editor",
        "category": "FictionWriter",
        "icon": "$(code)"
      },
      {
        "command": "fictionWriter.editors.codeMirror.openInCodeMirror",
        "title": "Edit with CodeMirror Editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.navigation.back",
        "title": "Back",
        "icon": "$(arrow-left)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.addToProject",
        "title": "Add to FictionWriter Project",
        "icon": "$(add)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.excludeFromProject",
        "title": "Exclude From FictionWriter Project...",
        "icon": "$(remove)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.debug.stateDump",
        "title": "Debug...",
        "icon": "$(sync)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.revealInExplorer",
        "title": "Reveal in Explorer",
        "category": "FictionWriter",
        "icon": "$(eye)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.sync.on",
        "title": "Sync with active editor: Enable",
        "icon": "$(sync)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.sync.off",
        "title": "Sync with active editor: Disable",
        "icon": "$(sync-ignored)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFile",
        "title": "New File...",
        "category": "FictionWriter",
        "icon": "$(new-file)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFolder",
        "title": "New Folder...",
        "category": "FictionWriter",
        "icon": "$(new-folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.rename",
        "title": "Rename...",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.trash",
        "title": "Move to Trash...",
        "category": "FictionWriter",
        "icon": "$(delete)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reorder.start",
        "title": "Reorder files",
        "category": "FictionWriter",
        "icon": "$(mdi-swap-vert)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reorder.commit",
        "title": "Save Order...",
        "category": "FictionWriter",
        "icon": "$(check)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reorder.discard",
        "title": "Discard",
        "category": "FictionWriter",
        "icon": "$(remove-close)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reorder.redistribute",
        "title": "Redistriute evenly",
        "category": "FictionWriter",
        "icon": "$(remove-close)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.toggleVirtualFolder",
        "title": "Toggle Virtual Folder",
        "category": "FictionWriter",
        "icon": "$(folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.decoration1",
        "title": "Show all. Click to change",
        "category": "FictionWriter",
        "icon": "$(symbol-text)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.decoration2",
        "title": "Show only metadata. Click to change",
        "category": "FictionWriter",
        "icon": "$(tag)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.decoration3",
        "title": "Show only targets. Click to change",
        "category": "FictionWriter",
        "icon": "$(target)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.decoration4",
        "title": "Last Modified Date",
        "category": "FictionWriter",
        "icon": "$(calendar)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.decoration5",
        "title": "No decorations. Click to change",
        "category": "FictionWriter",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.order.on",
        "title": "Show order",
        "category": "FictionWriter",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.order.off",
        "title": "Hide order",
        "category": "FictionWriter",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.extension.on",
        "title": "Show extension",
        "category": "FictionWriter",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.show.extension.off",
        "title": "Hide extension",
        "category": "FictionWriter",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.view.tree",
        "title": "Tree View",
        "category": "FictionWriter",
        "icon": "$(list-tree)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.view.treeHere",
        "title": "Tree View (here)",
        "category": "FictionWriter",
        "icon": "$(list-tree)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.view.list",
        "title": "List View",
        "category": "FictionWriter",
        "icon": "$(list-flat)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.view.listHere",
        "title": "List View (here)",
        "category": "FictionWriter",
        "icon": "$(list-flat)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.compile.startHere",
        "title": "Compile",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.compile.childrenInclude",
        "title": "Include all",
        "category": "FictionWriter",
        "icon": "$(check)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.compile.childrenExclude",
        "title": "Exclude all",
        "category": "FictionWriter",
        "icon": "$(check)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.compile.commit",
        "title": "Export...",
        "category": "FictionWriter",
        "icon": "$(fa-file-arrow-down)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.compile.discard",
        "title": "Discard",
        "category": "Markdown Fiction Writer",
        "icon": "$(remove-close)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.filters.allFiles",
        "title": "Show all files",
        "category": "Markdown Fiction Writer",
        "icon": "$(eye-closed)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.filters.projectFiles",
        "title": "Hide non project files",
        "category": "Markdown Fiction Writer",
        "icon": "$(eye)"
      },
      {
        "command": "fictionWriter.views.wordFrequency.refresh",
        "title": "Refresh Word Frequencies",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.open",
        "category": "Markdown Fiction Writer",
        "title": "Open Computed Document",
        "icon": "$(go-to-file)"
      },
      {
        "command": "fictionWriter.views.statistics.refresh",
        "title": "Refresh Document Statistics",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.clear",
        "title": "Clear",
        "icon": "$(clear-all)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.up",
        "title": "Select Previous",
        "icon": "$(find-previous-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.down",
        "title": "Select Next",
        "icon": "$(find-next-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.editValue",
        "title": "Edit single metadata entry",
        "icon": "$(edit)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.hideFilter",
        "title": "Hide",
        "icon": "$(eye-closed)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.showFilter",
        "title": "Show",
        "icon": "$(eye)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.setFilter",
        "title": "Filter: Set",
        "icon": "$(filter)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.removeFilter",
        "title": "Filter: Remove",
        "icon": "$(filter-filled)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.linkWithFileView.on",
        "title": "Sync with File Metadata: Enable",
        "icon": "$(mdi-link)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.linkWithFileView.off",
        "title": "Sync with File Metadata: Disable",
        "icon": "$(mdi-link-off)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.setFileDescriptionMetadataKey",
        "title": "Show in Project View",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.setFileDescriptionMetadataKey",
        "title": "Show in Project View",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.security.encryptCurrentFile",
        "title": "Encrypt current file",
        "enablement": "editorLangId == markdown",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.security.decryptCurrentFile",
        "title": "Decrypt current file",
        "enablement": "editorLangId == markdown",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.security.exportKeys",
        "title": "Export encryption keys",
        "enablement": "editorLangId == markdown",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.formatting.reformat",
        "title": "Reformat content...",
        "icon": "$(format)",
        "enablement": "editorLangId == fwmarkdown",
        "category": "Markdown Fiction Writer"
      }
    ],
    "customEditors": [
      {
        "viewType": "fictionWriter.editors.proseMirror",
        "displayName": "Fiction Writer Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      },
      {
        "viewType": "fictionWriter.editors.codeMirror",
        "displayName": "CodeMirror Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "fictionWriterMetadataExplorer",
          "title": "Metadata Explorer",
          "icon": "$(tag)"
        }
      ],
      "activitybar": [
        {
          "id": "fictionWriterProjectExplorer",
          "title": "FictionWriter",
          "icon": "$(book)"
        },
        {
          "id": "fictionWriterDocumentAnalysis",
          "title": "Text Analysis",
          "icon": "$(pie-chart)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "fictionWriter.views.projectExplorer",
        "contents": "You have not yet opened a folder.\n[Open Folder](command:vscode.openFolder)\n\n[Learn more](https://code.visualstudio.com) about how projects are handled by Fiction Writer."
      }
    ],
    "views": {
      "fictionWriterProjectExplorer": [
        {
          "id": "fictionWriter.views.projectExplorer",
          "name": "Project",
          "icon": "$(book)",
          "when": "fictionWriter.projects.enabled == true"
        },
        {
          "id": "fictionWriter.views.metadata",
          "name": "File Metadata",
          "icon": "$(tag)",
          "when": "fictionWriter.metadata.view.enabled == true"
        },
        {
          "id": "fictionWriter.views.metadata.filters",
          "name": "Project Metadata",
          "icon": "$(filter)",
          "when": "fictionWriter.metadata.view.enabled == true"
        }
      ],
      "fictionWriterMetadataExplorer": [],
      "fictionWriterDocumentAnalysis": [
        {
          "id": "fictionWriter.views.statistics",
          "name": "Document Statistics",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        },
        {
          "id": "fictionWriter.views.wordFrequency",
          "name": "Word Frequencies",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        }
      ]
    },
    "languages": [
      {
        "id": "fwmarkdown",
        "aliases": [
          "FwMarkdown",
          "FwMd"
        ],
        "extensions": [
          ".fw.md",
          ".fw.h.md",
          ".fw.i.md",
          ".fw.s.md",
          ".fw.txt",
          ".fw.h.txt",
          ".fw.i.txt",
          ".fw.s.txt"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "fwmarkdown",
        "scopeName": "text.fwmarkdown",
        "path": "./grammars/fw.markdown.tmGrammar.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.markdown": "markdown"
        }
      },
      {
        "scopeName": "markdown-fictionWriter.injection",
        "path": "./grammars/fiction.markdown.tmGrammar.json",
        "injectTo": [
          "text.html.markdown"
        ]
      }
    ],
    "snippets": [
      {
        "language": "fwmarkdown",
        "path": "./snippets/fwmarkdown.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "start": "npm run compile && code --extensionDevelopmentPath=$(pwd) --inspect-extensions=9229 --disable-extensions",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "test:jest": "tsc -p . && jest --no-coverage"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/preset-env": "^7.26.0",
    "@types/codemirror": "^5.60.15",
    "@types/deep-equal": "^1.0.4",
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/markdown-it": "^14.1.1",
    "@types/mdast": "^4.0.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vitest/ui": "^2.1.8",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.1",
    "chalk": "^5.3.0",
    "concurrently": "^8.2.2",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "jsdom": "^26.0.0",
    "mocha": "^10.8.2",
    "npm-run-all": "^4.1.5",
    "sinon": "^18.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5",
    "vitest": "^2.1.8"
  },
  "peerDependencies": {
    "@types/markdown-it": "*",
    "markdown-it": "*"
  },
  "dependencies": {
    "@codemirror/basic-setup": "^0.20.0",
    "@codemirror/lang-markdown": "^6.2.5",
    "@codemirror/language-data": "^6.5.1",
    "@types/unist": "^3.0.3",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "codemirror": "^6.0.1",
    "deep-equal": "^2.2.3",
    "glob": "^11.0.0",
    "js-yaml": "^4.1.0",
    "markdown-it": "*",
    "markdown-it-attrs": "^4.1.6",
    "mdast-util-to-markdown": "^2.1.2",
    "micromark": "^4.0.1",
    "prosemirror-example-setup": "^1.2.2",
    "prosemirror-gapcursor": "^1.3.2",
    "prosemirror-markdown": "^1.13.0",
    "prosemirror-model": "^1.22.2",
    "prosemirror-schema-basic": "^1.2.3",
    "prosemirror-schema-list": "^1.4.1",
    "prosemirror-state": "^1.4.3",
    "prosemirror-view": "^1.33.9",
    "remark": "^15.0.1",
    "remark-breaks": "^4.0.0",
    "remark-frontmatter": "^5.0.0",
    "remark-parse": "^11.0.0",
    "remark-stringify": "^11.0.0",
    "rfdc": "^1.4.1",
    "unified": "^11.0.5",
    "unist-util-visit": "^5.0.0"
  }
}

{
  "name": "fiction-writer-2",
  "displayName": "Fiction Writer 2",
  "description": "The next version of the Fiction Writer extension",
  "version": "0.0.1",
  "publisher": "vsc-zoctarine",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "colors": [
      {
        "id": "fictionWriter.blue",
        "description": "Blue Color",
        "defaults": {
          "dark": "#2196F3",
          "light": "#1565C0",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.lightblue",
        "description": "Blue Color",
        "defaults": {
          "dark": "#4cc9f0",
          "light": "#4cc9f0",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.teal",
        "description": "Teal Color",
        "defaults": {
          "dark": "#2ec4b6",
          "light": "#2ec4b6",
          "highContrast": "#0000FF"
        }
      },
      {
        "id": "fictionWriter.red",
        "description": "Red Color",
        "defaults": {
          "dark": "#ef5350",
          "light": "#e53935",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.lightred",
        "description": "Light Red Color",
        "defaults": {
          "dark": "#e06c75",
          "light": "#e06c75",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.lime",
        "description": "Lime Color",
        "defaults": {
          "dark": "#8BC34A",
          "light": "#8BC34A",
          "highContrast": "#00FF00"
        }
      },
      {
        "id": "fictionWriter.green",
        "description": "Green Color",
        "defaults": {
          "dark": "#00E676",
          "light": "#2E7D32",
          "highContrast": "#00FF00"
        }
      },
      {
        "id": "fictionWriter.orange",
        "description": "Orange Color",
        "defaults": {
          "dark": "#FF9800",
          "light": "#EF6C00",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.amber",
        "description": "Amber Color",
        "defaults": {
          "dark": "#FFC107",
          "light": "#FFA000",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.lightamber",
        "description": "Amber Color",
        "defaults": {
          "dark": "#F6D55C",
          "light": "#F6D55C",
          "highContrast": "#ffffff"
        }
      },
      {
        "id": "fictionWriter.purple",
        "description": "Purple Color",
        "defaults": {
          "dark": "#9C27B0",
          "light": "#9C27B0",
          "highContrast": "#ddb6b6"
        }
      },
      {
        "id": "fictionWriter.bluegrey",
        "description": "Blue Grey Color",
        "defaults": {
          "dark": "#607D8B",
          "light": "#607D8B",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.grey",
        "description": "Grey Color",
        "defaults": {
          "dark": "#7e7e7e",
          "light": "#8e8e8e",
          "highContrast": "#000000"
        }
      },
      {
        "id": "fictionWriter.yellow",
        "description": "Yellow Color",
        "defaults": {
          "dark": "#FFEB3B",
          "light": "#FBC02D",
          "highContrast": "#FFFFFF"
        }
      },
      {
        "id": "fictionWriter.pink",
        "description": "Pink Color",
        "defaults": {
          "dark": "#F06292",
          "light": "#F06292",
          "highContrast": "#FF0000"
        }
      },
      {
        "id": "fictionWriter.white",
        "description": "White Color",
        "defaults": {
          "dark": "#cccccc",
          "light": "#FFFFFF",
          "highContrast": "#FFFFFF"
        }
      },
      {
        "id": "fictionWriter.black",
        "description": "Black Color",
        "defaults": {
          "dark": "#111111",
          "light": "#333333",
          "highContrast": "#000000"
        }
      }
    ],
    "configuration": [
      {
        "title": "Editors",
        "properties": {
          "fictionWriter.editors.richTextEditor.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enables an experimental rich text editor (based on [ProseMirror](https://prosemirror.net/)).",
            "order": 1
          },
          "fictionWriter.editors.richTextEditor.focusMode": {
            "type": "string",
            "enum": [
              "none",
              "paragraph",
              "sentence"
            ],
            "default": "none",
            "markdownDescription": "Emphasize the active sentence or paragraph. Select `none` to disable.",
            "order": 2
          },
          "fictionWriter.editors.richTextEditor.showMergeEditorOnClose": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Show merge editor when closing the rich text editor.\n> **Note**: this is recommended, as the text editor will parse and serialze the original file markdown content.",
            "order": 3
          },
          "fictionWriter.editors.enableAltMarkdownEditor": {
            "type": "boolean",
            "default": true,
            "description": "Enables an alternative markdown editor (based on CodeMirror).",
            "order": 4
          },
          "fictionWriter.editors.autoSyncIntervalInSeconds": {
            "type": "number",
            "default": 10,
            "minimum": 5,
            "maximum": 1440,
            "description": "External editors need to sync modified contents with VS Code. For large documents, syncing at every keystroke is not efficient..",
            "order": 5
          }
        }
      },
      {
        "title": "Projects",
        "properties": {
          "fictionWriter.projects.enabled": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Projects"
          },
          "fictionWriter.projects.fileTypes": {
            "order": 20,
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "default": [
              "md"
            ],
            "tags": [
              "usesOnlineServices"
            ],
            "markdownDescription": "What file extensions should be considered as project files. (eg. `md` for `.md` files.)"
          },
          "fictionWriter.projects.fileAndFolderTrackingTag": {
            "order": 18,
            "type": "string",
            "default": "fw",
            "markdownDescription": "Only manage files and folders ending with this tag in project view.\n\n**Example:** if project tag is `fw` you will need to name your files like `Chapter1.fw/Scene1.fw.md` to be visible in the project view."
          },
          "fictionWriter.projects.rootFoldersEnabled": {
            "order": 25,
            "type": "boolean",
            "default": true,
            "description": "Enable Root Folders inside Projects"
          },
          "fictionWriter.projects.fileDescriptionMetadataKey": {
            "type": "string",
            "default": "title",
            "markdownDescription": "Shows the value of this metadata key, as a description, after the fileName, in the project tree. Leave blank if you don't want to show anything.",
            "order": 38
          }
        }
      },
      {
        "title": "Text Analysis",
        "properties": {
          "fictionWriter.textAnalysis.enabled": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Text Analysis"
          },
          "fictionWriter.textAnalysis.autoRefreshWhenPossible": {
            "order": 2,
            "type": "boolean",
            "default": true,
            "description": "Refreshes the text analysis when active editor changes, or analysis panel visibility changes."
          }
        }
      },
      {
        "title": "Metadata",
        "properties": {
          "fictionWriter.metadata.view.enabled": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable File Metadata View"
          },
          "fictionWriter.metadata.default": {
            "order": 2,
            "type": "object",
            "default": {
              "status": "draft",
              "tags": "[]"
            },
            "markdownDescription": "Default metadata keys to be added when new meta block is created",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fictionWriter.metadata.view.icons": {
            "order": 3,
            "type": "object",
            "markdownDescription": "Icons for metadata. Select any value from [Code Icons](https://code.visualstudio.com/api/references/icons-in-labels#icon-listing). The icon will be set if any partial or full match of the `Item` is found in the metadata key or value.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "fictionWriter.metadata.view.colors": {
            "order": 4,
            "type": "object",
            "markdownDescription": "The color will be set if the text from `Item` is found in the metadata key or value. You can customize these colors in [workbench customizations](https://code.visualstudio.com/api/extension-guides/color-theme#workbench-colors). Find [here](#) the full lsit of color ids.",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "blue",
                "lightblue",
                "teal",
                "red",
                "lightred",
                "lime",
                "green",
                "orange",
                "amber",
                "lightamber",
                "purple",
                "bluegrey",
                "grey",
                "yellow",
                "pink",
                "white",
                "black"
              ]
            }
          },
          "fictionWriter.metadata.filters.enabled": {
            "order": 5,
            "type": "boolean",
            "default": true,
            "description": "Enable Global Metadata Filters"
          },
          "fictionWriter.metadata.filters.countBadges.enabled": {
            "order": 6,
            "type": "boolean",
            "default": true,
            "description": "Show counters in Filter View"
          }
        }
      },
      {
        "title": "Security",
        "properties": {
          "fictionWriter.security.encrypt.globalPassword": {
            "type": "string",
            "default": "FiCtIoNwRiTeR#2",
            "markdownDescription": "Set a global password for all encrypted files.\n\n**`⚠\uFE0F Warning!`** *Changing this password will make decrypting **ALL** previously encrypted files unreadable!*",
            "scope": "application",
            "order": 1
          },
          "fictionWriter.security.encrypt.temporaryFies.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Encrypts all temporary files created in extension storage folder with the `#fictionWriter.security.encrypt.globalPassword#`",
            "order": 2
          }
        }
      }
    ],
    "configurationDefaults": {
      "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false
      }
    },
    "icons": {
      "fa-trash-can": {
        "description": "trash-can",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f2ed"
        }
      },
      "fa-book": {
        "description": "book",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f02d"
        }
      },
      "fa-inbox": {
        "description": "inbox",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f01c"
        }
      },
      "fa-filter": {
        "description": "filter",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f0b0"
        }
      },
      "fa-link": {
        "description": "link",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f08e"
        }
      },
      "fa-magnifying-glass": {
        "description": "magnifying-glass",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f002"
        }
      },
      "fa-file-lines-solid": {
        "description": "file-lines-solid",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-file-excel": {
        "description": "file-circle-question",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f1c3"
        }
      },
      "fa-file-lines": {
        "description": "file-lines",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-copy": {
        "description": "copy",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f0c5"
        }
      },
      "fa-folder": {
        "description": "folder",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\f07b"
        }
      },
      "fa-folder-closed": {
        "description": "folder-closed",
        "default": {
          "fontPath": "./media/webfonts/fa-regular-400.woff2",
          "fontCharacter": "\\e185"
        }
      },
      "fa-pen": {
        "description": "pen",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f304"
        }
      },
      "fa-pen-nib": {
        "description": "pen nib",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f5ad"
        }
      },
      "fa-folder-tree": {
        "description": "folder-tree",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\f802"
        }
      },
      "fa-chart-column": {
        "description": "chart-column",
        "default": {
          "fontPath": "./media/webfonts/fa-solid-900.woff2",
          "fontCharacter": "\\e0e3"
        }
      }
    },
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId == markdown && !activeCustomEditorId && fictionWriter.editors.richTextEditor.enabled == true",
          "command": "fictionWriter.editors.proseMirror.openInProseMirror",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == markdown && !activeCustomEditorId",
          "command": "fictionWriter.editors.codeMirror.openInCodeMirror",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "fictionWriter.views.projectExplorer.sync.on",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.sync.isOn == false",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.sync.off",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.sync.isOn == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.isOrdering == false",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.isOrdering == false",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reorder",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.isOrdering == false",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.commit",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.isOrdering == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.discard",
          "when": "view == fictionWriter.views.projectExplorer && fictionWriter.views.projectExplorer.isOrdering == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.refresh",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.clear",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.open",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.statistics.refresh",
          "when": "view == fictionWriter.views.statistics",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.setFilter",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.hasFilter == false",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.removeFilter",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.hasFilter == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.linkWithFileView.off",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.isLinked == true",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.metadata.filters.linkWithFileView.on",
          "when": "view == fictionWriter.views.metadata.filters && fictionWriter.views.metadata.isLinked == false",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "fictionWriter.views.projectExplorer.makeVirtualFolder",
          "when": "view == fictionWriter.views.projectExplorer && viewItem == file",
          "group": "1_fictionWriter_virtual@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.breakVirtualFolder",
          "when": "view == fictionWriter.views.projectExplorer && viewItem == virtualFolder",
          "group": "1_fictionWriter@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "2_fictionWriter@3"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "2_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.rename",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "3_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.trash",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "3_fictionWriter@5"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.down",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.up",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.metadata.filters.showFilter",
          "when": "view == fictionWriter.views.metadata.filters && viewItem == filterItemMetadataKeyHidden",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.metadata.filters.hideFilter",
          "when": "view == fictionWriter.views.metadata.filters && viewItem == filterItemMetadataKey",
          "group": "1_fictionWriter@1"
        }
      ]
    },
    "commands": [
      {
        "command": "fictionWriter.editors.proseMirror.openInProseMirror",
        "title": "Open in ProseMirror Editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen-nib)"
      },
      {
        "command": "fictionWriter.editors.codeMirror.openInCodeMirror",
        "title": "Edit with CodeMirror Editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.sync.on",
        "title": "Sync with active editor: Enable",
        "icon": "$(sync)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.sync.off",
        "title": "Sync with active editor: Disable",
        "icon": "$(sync-ignored)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFile",
        "title": "New File...",
        "category": "FictionWriter",
        "icon": "$(new-file)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFolder",
        "title": "New Folder...",
        "category": "FictionWriter",
        "icon": "$(new-folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.rename",
        "title": "Rename...",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.trash",
        "title": "Move to Trash...",
        "category": "FictionWriter",
        "icon": "$(delete)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reorder",
        "title": "Reorder items",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.commit",
        "title": "Save order",
        "category": "FictionWriter",
        "icon": "$(check)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.discard",
        "title": "Discard order",
        "category": "FictionWriter",
        "icon": "$(discard)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.makeVirtualFolder",
        "title": "Make virtual folder",
        "category": "FictionWriter",
        "icon": "$(folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.breakVirtualFolder",
        "title": "Break virtual folder",
        "category": "FictionWriter",
        "icon": "$(folder)"
      },
      {
        "command": "fictionWriter.views.wordFrequency.refresh",
        "title": "Refresh Word Frequencies",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.open",
        "category": "Markdown Fiction Writer",
        "title": "Open Computed Document",
        "icon": "$(go-to-file)"
      },
      {
        "command": "fictionWriter.views.statistics.refresh",
        "title": "Refresh Document Statistics",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.clear",
        "title": "Clear",
        "icon": "$(clear-all)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.up",
        "title": "Select Previous",
        "icon": "$(find-previous-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.down",
        "title": "Select Next",
        "icon": "$(find-next-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.hideFilter",
        "title": "Hide",
        "icon": "$(eye-closed)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.showFilter",
        "title": "Show",
        "icon": "$(eye)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.metadata.filters.setFilter",
        "title": "Filter: Set",
        "icon": "$(filter)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.removeFilter",
        "title": "Filter: Remove",
        "icon": "$(filter-filled)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.linkWithFileView.on",
        "title": "Sync with File Metadata: Enable",
        "icon": "$(sync)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.views.metadata.filters.linkWithFileView.off",
        "title": "Sync with File Metadata: Disable",
        "icon": "$(sync-ignored)",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.security.encryptCurrentFile",
        "title": "Encrypt current file",
        "enablement": "editorLangId == markdown",
        "category": "Markdown Fiction Writer"
      },
      {
        "command": "fictionWriter.security.decryptCurrentFile",
        "title": "Decrypt current file",
        "enablement": "editorLangId == markdown",
        "category": "Markdown Fiction Writer"
      }
    ],
    "customEditors": [
      {
        "viewType": "fictionWriter.editors.proseMirror",
        "displayName": "Fiction Writer Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      },
      {
        "viewType": "fictionWriter.editors.codeMirror",
        "displayName": "CodeMirror Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "fictionWriterMetadataExplorer",
          "title": "Metadata Explorer",
          "icon": "$(tag)"
        }
      ],
      "activitybar": [
        {
          "id": "fictionWriterProjectExplorer",
          "title": "Project",
          "icon": "$(book)"
        },
        {
          "id": "fictionWriterDocumentAnalysis",
          "title": "Text Analysis",
          "icon": "$(pie-chart)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "fictionWriter.views.projectExplorer",
        "contents": "You have not yet opened a folder.\n[Open Folder](command:vscode.openFolder)\n\n[Learn more](https://code.visualstudio.com) about how projects are handled by Fiction Writer."
      }
    ],
    "views": {
      "fictionWriterProjectExplorer": [
        {
          "id": "fictionWriter.views.projectExplorer",
          "name": "Project View",
          "icon": "$(book)",
          "when": "fictionWriter.projects.enabled == true"
        },
        {
          "id": "fictionWriter.views.metadata",
          "name": "File Metadata",
          "icon": "$(tag)",
          "when": "fictionWriter.metadata.view.enabled == true"
        },
        {
          "id": "fictionWriter.views.metadata.filters",
          "name": "Project Metadata",
          "icon": "$(filter)",
          "when": "fictionWriter.metadata.filters.enabled == true"
        }
      ],
      "fictionWriterMetadataExplorer": [
      ],
      "fictionWriterDocumentAnalysis": [
        {
          "id": "fictionWriter.views.statistics",
          "name": "Document Statistics",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        },
        {
          "id": "fictionWriter.views.wordFrequency",
          "name": "Word Frequencies",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        }
      ]
    },
    "grammars": [
      {
        "scopeName": "markdown-fictionWriter.injection",
        "path": "./grammars/fiction.markdown.tmGrammar.json",
        "injectTo": [
          "text.html.markdown"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/codemirror": "^5.60.15",
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/markdown-it": "^14.1.1",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "chalk": "^5.3.0",
    "concurrently": "^8.2.2",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "mocha": "^10.7.0",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  },
  "peerDependencies": {
    "@types/markdown-it": "*",
    "markdown-it": "*"
  },
  "dependencies": {
    "@codemirror/basic-setup": "^0.20.0",
    "@codemirror/lang-markdown": "^6.2.5",
    "@codemirror/language-data": "^6.5.1",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "codemirror": "^6.0.1",
    "glob": "^11.0.0",
    "js-yaml": "^4.1.0",
    "markdown-it": "*",
    "markdown-it-attrs": "^4.1.6",
    "prosemirror-example-setup": "^1.2.2",
    "prosemirror-gapcursor": "^1.3.2",
    "prosemirror-markdown": "^1.13.0",
    "prosemirror-model": "^1.22.2",
    "prosemirror-schema-basic": "^1.2.3",
    "prosemirror-schema-list": "^1.4.1",
    "prosemirror-state": "^1.4.3",
    "prosemirror-view": "^1.33.9"
  }
}

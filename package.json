{
  "name": "fiction-writer-2",
  "displayName": "Fiction Writer 2",
  "description": "The next version of the Fiction Writer extension",
  "version": "0.0.1",
  "publisher": "vsc-zoctarine",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Editors",
        "properties": {
          "fictionWriter.editors.richTextEditor.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enables an experimental rich text editor (based on [ProseMirror](https://prosemirror.net/)).",
            "order": 1
          },
          "fictionWriter.editors.enableAltMarkdownEditor": {
            "type": "boolean",
            "default": true,
            "description": "Enables an alternative markdown editor (based on CodeMirror).",
            "order": 2
          },
          "fictionWriter.editors.autoSyncIntervalInSeconds": {
            "type": "number",
            "default": 10,
            "minimum": 5,
            "maximum": 1440,
            "description": "External editors need to sync modified contents with VS Code. For large documents, syncing at every keystroke is not efficient..",
            "order": 3
          }
        }
      },
      {
        "title": "Projects",
        "properties": {
          "fictionWriter.projects.enabled": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Projects"
          },
          "fictionWriter.projects.fileTypes": {
            "order": 20,
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true,
            "default": [
              "md"
            ],
            "tags": [
              "usesOnlineServices"
            ],
            "markdownDescription": "What file extensions should be considered as project files. (eg. `md` for `.md` files.)"
          },
          "fictionWriter.projects.rootFoldersEnabled": {
            "order": 25,
            "type": "boolean",
            "default": true,
            "description": "Enable Root Folders inside Projects"
          }
        }
      },
      {
        "title": "Text Analysis",
        "properties": {
          "fictionWriter.textAnalysis.enabled": {
            "order": 1,
            "type": "boolean",
            "default": true,
            "description": "Enable Text Analysis"
          },
          "fictionWriter.textAnalysis.autoRefreshWhenPossible": {
            "order": 2,
            "type": "boolean",
            "default": true,
            "description": "Refreshes the text analysis when active editor changes, or analysis panel visibility changes."
          }
        }
      }
    ],
    "icons": {
      "fa-trash-can": {
        "description": "trash-can",
        "default": {
          "fontPath": "./media/fonts/fa-regular-400.woff2",
          "fontCharacter": "\\f2ed"
        }
      },
      "fa-book": {
        "description": "book",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f02d"
        }
      },
      "fa-inbox": {
        "description": "inbox",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f01c"
        }
      },
      "fa-file-lines-solid": {
        "description": "file-lines-solid",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-file-excel": {
        "description": "file-circle-question",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f1c3"
        }
      },
      "fa-file-lines": {
        "description": "file-lines",
        "default": {
          "fontPath": "./media/fonts/fa-regular-400.woff2",
          "fontCharacter": "\\f15c"
        }
      },
      "fa-copy": {
        "description": "copy",
        "default": {
          "fontPath": "./media/fonts/fa-regular-400.woff2",
          "fontCharacter": "\\f0c5"
        }
      },
      "fa-folder": {
        "description": "folder",
        "default": {
          "fontPath": "./media/fonts/fa-regular-400.woff2",
          "fontCharacter": "\\f07b"
        }
      },
      "fa-folder-closed": {
        "description": "folder-closed",
        "default": {
          "fontPath": "./media/fonts/fa-regular-400.woff2",
          "fontCharacter": "\\e185"
        }
      },
      "fa-pen": {
        "description": "pen",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f304"
        }
      },
      "fa-pen-nib": {
        "description": "pen nib",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f5ad"
        }
      },
      "fa-folder-tree": {
        "description": "folder-tree",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\f802"
        }
      },
      "fa-chart-column": {
        "description": "chart-column",
        "default": {
          "fontPath": "./media/fonts/fa-solid-900.woff2",
          "fontCharacter": "\\e0e3"
        }
      }
    },
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId == markdown && !activeCustomEditorId && fictionWriter.editors.richTextEditor.enabled == true",
          "command": "fictionWriter.editors.proseMirror.openInProseMirror",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == markdown && !activeCustomEditorId",
          "command": "fictionWriter.editors.codeMirror.openInCodeMirror",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.reload",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.projectExplorer.commit",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.refresh",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.clear",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.wordFrequency.open",
          "when": "view == fictionWriter.views.wordFrequency",
          "group": "navigation"
        },
        {
          "command": "fictionWriter.views.statistics.refresh",
          "when": "view == fictionWriter.views.statistics",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "fictionWriter.views.projectExplorer.makeVirtualFolder",
          "when": "view == fictionWriter.views.projectExplorer && viewItem == file",
          "group": "1_fictionWriter_virtual@1"
        },
        {
          "command": "fictionWriter.views.projectExplorer.breakVirtualFolder",
          "when": "view == fictionWriter.views.projectExplorer && viewItem == virtualFolder",
          "group": "1_fictionWriter@2"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFile",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "2_fictionWriter@3"
        },
        {
          "command": "fictionWriter.views.projectExplorer.newFolder",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "2_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.rename",
          "when": "view == fictionWriter.views.projectExplorer",
          "group": "3_fictionWriter@4"
        },
        {
          "command": "fictionWriter.views.projectExplorer.trash",
          "when": "view == projectExplorerView",
          "group": "3_fictionWriter@5"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.down",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        },
        {
          "command": "fictionWriter.views.wordFrequency.next.up",
          "when": "view == fictionWriter.views.wordFrequency && viewItem == wordStat",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "command": "fictionWriter.editors.proseMirror.openInProseMirror",
        "title": "Edit with ProseMirror Editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen-nib)"
      },
      {
        "command": "fictionWriter.editors.codeMirror.openInCodeMirror",
        "title": "Edit with CodeMirror Editor",
        "category": "FictionWriter",
        "icon": "$(fa-pen)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFile",
        "title": "New File...",
        "category": "FictionWriter",
        "icon": "$(new-file)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.newFolder",
        "title": "New Folder...",
        "category": "FictionWriter",
        "icon": "$(new-folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.rename",
        "title": "Rename...",
        "category": "FictionWriter",
        "icon": "$(edit)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.trash",
        "title": "Move to Trash...",
        "category": "FictionWriter",
        "icon": "$(delete)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.reload",
        "title": "Refresh Project View",
        "category": "FictionWriter",
        "icon": "$(refresh)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.commit",
        "title": "Update file order on disk",
        "category": "FictionWriter",
        "icon": "$(save-all)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.makeVirtualFolder",
        "title": "Make virtual folder",
        "category": "FictionWriter",
        "icon": "$(folder)"
      },
      {
        "command": "fictionWriter.views.projectExplorer.breakVirtualFolder",
        "title": "Break virtual folder",
        "category": "FictionWriter",
        "icon": "$(folder)"
      },
      {
        "command": "fictionWriter.views.wordFrequency.refresh",
        "title": "Refresh Word Frequencies",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.open",
        "category": "Markdown Fiction Writer",
        "title": "Open Computed Document",
        "icon": "$(go-to-file)"
      },
      {
        "command": "fictionWriter.views.statistics.refresh",
        "title": "Refresh Document Statistics",
        "icon": "$(refresh)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.clear",
        "title": "Clear",
        "icon": "$(clear-all)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.up",
        "title": "Select Previous",
        "icon": "$(find-previous-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      },
      {
        "command": "fictionWriter.views.wordFrequency.next.down",
        "title": "Select Next",
        "icon": "$(find-next-match)",
        "category": "Markdown Fiction Writer",
        "when": "false"
      }
    ],
    "customEditors": [
      {
        "viewType": "fictionWriter.editors.proseMirror",
        "displayName": "Fiction Writer Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      },
      {
        "viewType": "fictionWriter.editors.codeMirror",
        "displayName": "CodeMirror Editor",
        "selector": [
          {
            "filenamePattern": "*.md"
          }
        ],
        "priority": "option"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "fictionWriterProjectExplorer",
          "title": "Project",
          "icon": "$(fa-folder-tree)"
        },
        {
          "id": "fictionWriterDocumentAnalysis",
          "title": "Text Analysis",
          "icon": "$(fa-chart-column)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "fictionWriter.views.projectExplorer",
        "contents": "You have not yet opened a folder.\n[Open Folder](command:vscode.openFolder)\n\n[Learn more](https://code.visualstudio.com) about how projects are handled by Fiction Writer."
      }
    ],
    "views": {
      "fictionWriterProjectExplorer": [
        {
          "id": "fictionWriter.views.projectExplorer",
          "name": "Project View",
          "icon": "$(book)",
          "when": "fictionWriter.projects.enabled == true"
        },
        {
          "id": "fictionWriter.views.metadata",
          "name": "Metadata"
        }
      ],
      "fictionWriterDocumentAnalysis": [
        {
          "id": "fictionWriter.views.statistics",
          "name": "Document Statistics",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        },
        {
          "id": "fictionWriter.views.wordFrequency",
          "name": "Word Frequencies",
          "icon": "$(target)",
          "when": "fictionWriter.textAnalysis.enabled == true"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/codemirror": "^5.60.15",
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/markdown-it": "^14.1.1",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "chalk": "^5.3.0",
    "concurrently": "^8.2.2",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "mocha": "^10.7.0",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.5"
  },
  "peerDependencies": {
    "@types/markdown-it": "*",
    "markdown-it": "*"
  },
  "dependencies": {
    "@codemirror/basic-setup": "^0.20.0",
    "@codemirror/lang-markdown": "^6.2.5",
    "@codemirror/language-data": "^6.5.1",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "codemirror": "^6.0.1",
    "glob": "^11.0.0",
    "js-yaml": "^4.1.0",
    "markdown-it": "*",
    "markdown-it-attrs": "^4.1.6",
    "prosemirror-example-setup": "^1.2.2",
    "prosemirror-gapcursor": "^1.3.2",
    "prosemirror-markdown": "^1.13.0",
    "prosemirror-model": "^1.22.2",
    "prosemirror-schema-basic": "^1.2.3",
    "prosemirror-schema-list": "^1.4.1",
    "prosemirror-state": "^1.4.3",
    "prosemirror-view": "^1.33.9"
  }
}
